# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool:
  vmImage: ubuntu-latest

variables:
  bkstrggrp: 'ResourceTest'
  bkstrgname: 'mystorageaccount6262023'
  bkcontainername: 'mycontainer'
  bkstoragekey: 'terraform.tfstate'

stages:
  - stage: tfdestroy
    jobs:
      - job: destroy
        steps:
          - task: TerraformInstaller@1
            displayName: tfinstall
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV4@4
            displayName: init
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/Azure DevOps and Terraform Pipelines'
              backendServiceArm: 'DevTerraformTest'
              backendAzureRmResourceGroupName: '$(bkstrggrp)'
              backendAzureRmStorageAccountName: '$(bkstrgname)'
              backendAzureRmContainerName: '$(bkcontainername)'
              backendAzureRmKey: '$(bkstoragekey)'
          - task: TerraformTaskV4@4
            displayName: plan
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/Azure DevOps and Terraform Pipelines'
              environmentServiceNameAzureRM: 'DevTerraformTest'
          - task: TerraformTaskV4@4
            displayName: destroy
            inputs:
              provider: 'azurerm'
              command: 'destroy'
              workingDirectory: '$(System.DefaultWorkingDirectory)/Azure DevOps and Terraform Pipelines'
              environmentServiceNameAzureRM: 'DevTerraformTest'

